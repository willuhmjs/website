---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import Experience from "@components/Experience.astro";
import { EXPERIENCE } from "@consts";

const collection = (await getCollection("experience"))
  .sort((a, b) => {
    const aDate = a.data.positions[a.data.positions.length - 1].dateEnd;
    const bDate = b.data.positions[b.data.positions.length - 1].dateEnd;
    if (aDate === "Present") return -1;
    if (bDate === "Present") return 1;
    return bDate.valueOf() - aDate.valueOf();
  });

const experience = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

type Exp = (typeof experience)[number];
let education: Exp[] = [];
let work: Exp[] = [];

experience.forEach(exp => {
  if (exp.data.isSchool) return education.push(exp);
  work.push(exp);
});
---

<PageLayout title={EXPERIENCE.TITLE} description={EXPERIENCE.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="space-y-4">
        <div class="animate font-semibold text-black dark:text-white">
          {education.length > 0 ? "Education" : ""}
        </div>
        <ul class="flex flex-col space-y-4">
          {
            education.map(entry => (
              <Experience {entry} />
            ))
          }
        </ul>
      </div>
      <div class="space-y-4">
        <div class="animate font-semibold text-black dark:text-white">
          {work.length > 0 ? "Work" : ""}
        </div>
        <ul class="flex flex-col space-y-4">
          {
            work.map(entry => (
              <Experience {entry} />
            ))
          }
        </ul>
      </div>
    </div>
  </Container>
</PageLayout>
