---
import { dateRange } from "@lib/utils";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
const { entry } = Astro.props;

type Position = CollectionEntry<"experience">["data"]["positions"][number];
---

<li class="animate">
    <div class="font-semibold text-black dark:text-white">
      {entry.data.org}
    </div>
    {entry.data.positions.sort((a: Position, b: Position) => {
      const dateA = a.dateEnd === "Present" ? new Date() : new Date(a.dateEnd);
      const dateB = b.dateEnd === "Present" ? new Date() : new Date(b.dateEnd);
      return dateB.getTime() - dateA.getTime();
    }).map((position: Position) => (
      <div class="mb-4">
        {entry.data.isSchool && (
          <div class="text-sm opacity-75">
            {dateRange(position.dateStart, position.dateEnd)}
          </div>
        )}
        <div class="text-sm opacity-75 flex align-center gap-1 subtitle">
          {entry.data.isSchool ? <Icon name="mdi:school-outline" class="w-4 h-4 inline-block" /> : <Icon name="mdi:badge-account-horizontal-outline" class="w-4 h-4 inline-block" />}
          <span set:html={position.subtitle}/>
        </div>
        {!entry.data.isSchool && (
          <div class="text-sm opacity-75">
            {dateRange(position.dateStart, position.dateEnd)}
          </div>
        )}
      </div>
    ))}
    <article class="prose dark:prose-invert max-w-none">
      {entry.Content && <entry.Content />}
    </article>
  </li>
  
  <style>
    
    .subtitle {
      margin-top: 5px;
    }

    .subtitle > svg {
      display: inline;
      margin: auto 0;
      margin-right: 5px;
    }
    


  </style>
